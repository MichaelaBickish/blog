(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{478:function(t,e,a){"use strict";a.r(e);var n=a(2),o=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"week-11-day-2-daily-journal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#week-11-day-2-daily-journal"}},[t._v("#")]),t._v(" Week 11 | Day 2 Daily Journal")]),t._v(" "),a("p",[t._v("Afternoon Project: contractor/jobs API: https://github.com/MichaelaBickish/contractor")]),t._v(" "),a("p",[t._v("Read Dotnet WebAPI's > Relationships, and answer the following questions")]),t._v(" "),a("h2",{attrs:{id:"what-is-the-difference-between-a-primary-key-and-a-foreign-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-a-primary-key-and-a-foreign-key"}},[t._v("#")]),t._v(" "),a("em",[t._v("What is the difference between a primary key and a foreign key")])]),t._v(" "),a("p",[t._v("Primary key is the unique identifier i.e. the id of that thing- not repeated. A foreign key is a unique identifier of something else being referenced- this is how be build relationships in sql.")]),t._v(" "),a("h2",{attrs:{id:"what-is-an-alias"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-an-alias"}},[t._v("#")]),t._v(" "),a("em",[t._v("What is an Alias?")])]),t._v(" "),a("p",[t._v("A shortened version of our table names, kind of like a variable, that can be used in place of writing the full table name to condense the code.")]),t._v(" "),a("h2",{attrs:{id:"demonstrate-how-you-would-query-a-join-statement-that-would-get-all-of-a-doctors-patients-from-the-following-collections"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#demonstrate-how-you-would-query-a-join-statement-that-would-get-all-of-a-doctors-patients-from-the-following-collections"}},[t._v("#")]),t._v(" "),a("em",[t._v("Demonstrate how you would query a join statement that would get all of a doctors patients from the following collections:")])]),t._v(" "),a("p",[t._v("SELECT\nd.name as doctorName,\np.*,\ndp.id as doctorsPatientId,\ndp.doctorId as doctorId,\ndp.patientId as patientId\nFROM\ndoctors_patients dp\nJOIN patients p on p.id = dp.patientId\nJOIN doctors d on d.id = dp.doctorId\nWHERE\ndp.doctorId = 1")]),t._v(" "),a("p",[t._v("CREATE TABLE doctors (\nid INT NOT NULL AUTO_INCREMENT,\n-- CODE OMITTED\nPRIMARY KEY (id)\n)")]),t._v(" "),a("p",[t._v("CREATE TABLE patients (\nid INT NOT NULL AUTO_INCREMENT,\n-- CODE OMITTED\nPRIMARY KEY (id)\n)")]),t._v(" "),a("p",[t._v("CREATE TABLE doctors_patients (\nid INT NOT NULL AUTO_INCREMENT,\ndoctorId INT NOT NULL,\npatientId INT NOT NULL,")]),t._v(" "),a("p",[t._v("FOREIGN KEY (doctorId)\nREFERENCES doctors(id),\nFOREIGN KEY (patientId)\nREFERENCES patients(id),\n)")])])}),[],!1,null,null,null);e.default=o.exports}}]);