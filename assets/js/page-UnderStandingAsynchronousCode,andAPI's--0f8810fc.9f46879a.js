(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{506:function(e,s,t){"use strict";t.r(s);var a=t(2),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"understanding-asynchronous-code-and-api-s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#understanding-asynchronous-code-and-api-s"}},[e._v("#")]),e._v(" UnderStanding Asynchronous Code, and API's")]),e._v(" "),t("p",[t("strong",[e._v("1.")]),e._v(" What is the difference between "),t("code",[e._v("asynchronous")]),e._v(" code and "),t("code",[e._v("synchronous")]),e._v(" code?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("synchronous code is executed in sequence where each statement waits for the previous to finish. Async doesn't have to wait and the app can continue to run.\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("2.")]),e._v(" What is an event listener?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("An event listener watches a variable for change and upon change, executes a function. This is the observer pattern. Allowing you to update part of your app without reloading excessively.\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("3.")]),e._v(" What does the "),t("code",[e._v("O")]),e._v(" represent in the "),t("code",[e._v("SOLID")]),e._v(" principles?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("open closed principle- open for extension without breaking existing code\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("4.")]),e._v(" What is a callback / higher order function?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("A function that may take some time to produce a result, but runs asynchronously within the program, not slowing it down for the user.\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("5.")]),e._v(" What is a "),t("code",[e._v("promise")]),e._v("? How do you capture an error from a "),t("code",[e._v("promise")]),e._v("?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("a result that will be returned from an async function. We use the try/catch block where, if the code we want to execute has an error, the catch block will let us know exactly where the error originated from using console.error(error).\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("6.")]),e._v(" Name three processes used to make requests over "),t("code",[e._v("HTTP")]),e._v("?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Get, post, put.\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("7.")]),e._v(" What does the "),t("code",[e._v("API")]),e._v(" acronym stand for?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Application programming interface\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("8.")]),e._v(" In the "),t("code",[e._v("MVC")]),e._v(" design pattern, who is responsible for making calls to "),t("code",[e._v("APIs")]),e._v("?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Service. That info is then passed to app state.\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("9.")]),e._v(" What is the purpose of encapsulation in programming?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Bundling data to hide values or state of a structured data object inside a class, preventing direct access by clients.\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("10.")]),e._v(" What is "),t("code",[e._v("HTTP")]),e._v(" response code for a successful request?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('200 "ok" \n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("11.")]),e._v(" What is a 500 error?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("A catch all response, indicates the server encountered an unexpected condition that prevented it from fullfilling the request.\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);